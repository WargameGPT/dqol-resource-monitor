#!/usr/bin/env php
<?php

$version = $argv[1] ?? null;

if(empty($version)) {
    echo 'First param must be version' . PHP_EOL;
    exit(1);
}

if (str_starts_with($version, 'v')) {
    $version = substr($version, 1);
}


function setVersionInDataJson(string $version, string $filename = 'info.json'): void
{
    $json = json_decode(file_get_contents($filename) ?: '', null, 512, JSON_THROW_ON_ERROR);

    $json->version = $version;

    file_put_contents($filename, json_encode($json, JSON_THROW_ON_ERROR | JSON_PRETTY_PRINT) . PHP_EOL);
}

function setVersionInLua(string $version, string $filename = 'control.lua'): void
{
    $file = file_get_contents($filename) ?: '';

    [$major, $minor, $patch] = explode('.', $version);

    $string = '_VERSION = {' . PHP_EOL;
    $string .= '    major = ' . $major . ',' . PHP_EOL;
    $string .= '    minor = ' . $minor . ',' . PHP_EOL;
    $string .= '    patch = ' . $patch . ',' . PHP_EOL;
    $string .= '    string = \'' . $version . '\',' . PHP_EOL;
    $string .= '}';

    $file = preg_replace('/^_VERSION = \{(.*?)\}$/ms', $string, $file, 1);

    file_put_contents($filename, $file);
}

echo 'Setting version ' . $version . PHP_EOL;
setVersionInDataJson($version);
setVersionInLua($version);

echo 'Done, do not forget to tag git!' . PHP_EOL;