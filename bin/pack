#!/usr/bin/env php
<?php

define('BASE_DIR', realpath(__DIR__ . '/..'));

function getIgnoreList(): array
{
    $list = ['.git', '.gitignore', '.gitattributes'];
    // read gitignore
    $gitignore = file_get_contents(BASE_DIR . '/.gitignore');
    $list = array_merge($list, explode(PHP_EOL, $gitignore));

    // read gitattributes
    $gitattributes = file_get_contents(BASE_DIR . '/.gitattributes');
    $attributes = array_filter(explode(PHP_EOL, $gitattributes), fn(string $line) => str_ends_with($line, 'export-ignore'));
    $list = array_merge($list, array_map(fn(string $line) => str_replace('export-ignore', '', $line), $attributes));

    $list = array_map(fn(string $line) => trim($line), $list);
    $list = array_filter($list, fn(string $line) => $line !== '');
    $list = array_map(fn(string $line) => str_ends_with($line, '/') ? substr($line, 0, -1) : $line, $list);

    return $list;
}

function addDirectory(string $directory, ZipArchive $zip, string $prefix = '',  string $relative = ''): void
{
    foreach(scandir($directory) as $filename) {
        if ($filename === '.' || $filename === '..')
            continue;

        $path = $relative . $filename;
        $fullPath = $directory . '/' . $filename;
        if (!isIgnored($path)) {
            if (is_dir($fullPath)) {
                echo 'Dir ' . $path . PHP_EOL;
                $zip->addEmptyDir($prefix . $path);
                addDirectory($fullPath, $zip, $prefix, $path . '/');
            }
            else {
                echo 'Add ' . $path . PHP_EOL;
                $zip->addFile($fullPath, $prefix . $path);
            }
        }
    }
}

function isIgnored(string $path): bool
{
    if (in_array($path, IGNORE_LIST)) {
        return true;
    }
    return false;
}

$ignore = getIgnoreList();
define('IGNORE_LIST', $ignore);

$version = trim(exec('git describe --tags --abbrev=0') ?: '0.0.0');
$version = str_starts_with($version, 'v') ? substr($version, 1) : $version;
$info = json_decode(file_get_contents(BASE_DIR . '/info.json'));

$zipPath = BASE_DIR . '/dist/' . $info->name . '_' . $version . '.zip';

echo 'packing to ' . $zipPath . PHP_EOL;

if (file_exists($zipPath)) {
    echo 'remove existing file' . PHP_EOL;
    unlink($zipPath);
}

$zip = new ZipArchive();
$zip->open($zipPath, ZipArchive::CREATE);

addDirectory(BASE_DIR, $zip, $info->name . '/');

$zip->close();
